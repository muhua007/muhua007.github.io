<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java字符串编码转换</title>
      <link href="2020/11/05/java%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E7%A0%81%E8%BD%AC%E6%8D%A2/"/>
      <url>2020/11/05/java%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E7%A0%81%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将字符串按UTF-8编码转换为字节数组</span></span><br><span class="line"><span class="keyword">byte</span>[] byte_s = <span class="string">&quot;中&quot;</span>.getBytes(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"><span class="comment">//将字节数组以ISO8859-1的编码方式转换为字符串</span></span><br><span class="line">String s_iso88591 = <span class="keyword">new</span> String(byte_s,<span class="string">&quot;ISO8859-1&quot;</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//   \u 代表unicode编码，是一个字符；</span></span><br><span class="line">String s1 = <span class="string">&quot;\u0021&quot;</span>;</span><br><span class="line">System.out.println(s1);   <span class="comment">//结果为   ！</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//0x开头代表十六进制，实际上就是一个整数；</span></span><br><span class="line"><span class="keyword">int</span> i1 = <span class="number">0x001f</span>;</span><br><span class="line">System.out.println(i1);   <span class="comment">//结果为   31</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么要重写hashcode方法</title>
      <link href="2020/11/05/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%87%8D%E5%86%99hashcode%E6%96%B9%E6%B3%95/"/>
      <url>2020/11/05/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%87%8D%E5%86%99hashcode%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="hashcode方法"><a href="#hashcode方法" class="headerlink" title="hashcode方法"></a>hashcode方法</h3><p>Object中的hashcode是一个本地方法</p><h4 id="其方法说明原文如下："><a href="#其方法说明原文如下：" class="headerlink" title="其方法说明原文如下："></a>其方法说明原文如下：</h4><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns a hash code value for the object. This method is</span></span><br><span class="line"><span class="comment">     * supported for the benefit of hash tables such as those provided by</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> java.util.HashMap&#125;.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * The general contract of &#123;<span class="doctag">@code</span> hashCode&#125; is:</span></span><br><span class="line"><span class="comment">     * &lt;ul&gt;</span></span><br><span class="line"><span class="comment">     * &lt;li&gt;Whenever it is invoked on the same object more than once during</span></span><br><span class="line"><span class="comment">     *     an execution of a Java application, the &#123;<span class="doctag">@code</span> hashCode&#125; method</span></span><br><span class="line"><span class="comment">     *     must consistently return the same integer, provided no information</span></span><br><span class="line"><span class="comment">     *     used in &#123;<span class="doctag">@code</span> equals&#125; comparisons on the object is modified.</span></span><br><span class="line"><span class="comment">     *     This integer need not remain consistent from one execution of an</span></span><br><span class="line"><span class="comment">     *     application to another execution of the same application.</span></span><br><span class="line"><span class="comment">     * &lt;li&gt;If two objects are equal according to the &#123;<span class="doctag">@code</span> equals(Object)&#125;</span></span><br><span class="line"><span class="comment">     *     method, then calling the &#123;<span class="doctag">@code</span> hashCode&#125; method on each of</span></span><br><span class="line"><span class="comment">     *     the two objects must produce the same integer result.</span></span><br><span class="line"><span class="comment">     * &lt;li&gt;It is &lt;em&gt;not&lt;/em&gt; required that if two objects are unequal</span></span><br><span class="line"><span class="comment">     *     according to the &#123;<span class="doctag">@link</span> java.lang.Object#equals(java.lang.Object)&#125;</span></span><br><span class="line"><span class="comment">     *     method, then calling the &#123;<span class="doctag">@code</span> hashCode&#125; method on each of the</span></span><br><span class="line"><span class="comment">     *     two objects must produce distinct integer results.  However, the</span></span><br><span class="line"><span class="comment">     *     programmer should be aware that producing distinct integer results</span></span><br><span class="line"><span class="comment">     *     for unequal objects may improve the performance of hash tables.</span></span><br><span class="line"><span class="comment">     * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * As much as is reasonably practical, the hashCode method defined</span></span><br><span class="line"><span class="comment">     * by class &#123;<span class="doctag">@code</span> Object&#125; does return distinct integers for</span></span><br><span class="line"><span class="comment">     * distinct objects. (The hashCode may or may not be implemented</span></span><br><span class="line"><span class="comment">     * as some function of an object&#x27;s memory address at some point</span></span><br><span class="line"><span class="comment">     * in time.)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>  a hash code value for this object.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span>     java.lang.Object#equals(java.lang.Object)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span>     java.lang.System#identityHashCode</span></span><br><span class="line"><span class="comment">     */</span></span><br></pre></td></tr></table></figure><h4 id="汉语翻译"><a href="#汉语翻译" class="headerlink" title="汉语翻译"></a>汉语翻译</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回该对象的哈希值。支持此方法是为了使hashMap提供的哈希表受益。</span></span><br><span class="line"><span class="comment">     * 该方法的总协定是:</span></span><br><span class="line"><span class="comment">     * 1、每当在Java应用程序的执行期间对同一对象多次调用时，hashCode方法必须始终返回相同的整数，前提是没有修改对象上equals方法比较中使用的信</span></span><br><span class="line"><span class="comment">     * 息。从应用程序的一次执行到同一应用程序的另一次执行，此整数不必保持一致。</span></span><br><span class="line"><span class="comment">     * 2、如果两个对象根据equals方法是相等的，那么对这两个对象中的每一个调用hashCode方法必须产生相同的整数结果。    </span></span><br><span class="line"><span class="comment">     * 3、如果两个对象根据equals方法是不相等的，那么在这两个对象上调用hashCode方法不必产生不同的整数结果。然而，程序员应该知道，</span></span><br><span class="line"><span class="comment">     * 为不相等的对象生成不同的整数结果可以提高hash tables的性能</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * 在合理可行的情况下，类Object定义的hashCode方法确实为不同的对象返回不同的整数。（在某个时间点，哈希码可以实现为对象内存      </span></span><br><span class="line"><span class="comment">     * 地址的某个函数，也可以不实现）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>  a hash code value for this object.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span>     java.lang.Object#equals(java.lang.Object)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span>     java.lang.System#identityHashCode</span></span><br><span class="line"><span class="comment">     */</span></span><br></pre></td></tr></table></figure><h3 id="equal方法"><a href="#equal方法" class="headerlink" title="equal方法"></a>equal方法</h3><h4 id="其方法说明原文如下：-1"><a href="#其方法说明原文如下：-1" class="headerlink" title="其方法说明原文如下："></a>其方法说明原文如下：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Indicates whether some other object is &quot;equal to&quot; this one.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * The &#123;<span class="doctag">@code</span> equals&#125; method implements an equivalence relation</span></span><br><span class="line"><span class="comment">     * on non-null object references:</span></span><br><span class="line"><span class="comment">     * &lt;ul&gt;</span></span><br><span class="line"><span class="comment">     * &lt;li&gt;It is &lt;i&gt;reflexive&lt;/i&gt;: for any non-null reference value</span></span><br><span class="line"><span class="comment">     *     &#123;<span class="doctag">@code</span> x&#125;, &#123;<span class="doctag">@code</span> x.equals(x)&#125; should return</span></span><br><span class="line"><span class="comment">     *     &#123;<span class="doctag">@code</span> true&#125;.</span></span><br><span class="line"><span class="comment">     * &lt;li&gt;It is &lt;i&gt;symmetric&lt;/i&gt;: for any non-null reference values</span></span><br><span class="line"><span class="comment">     *     &#123;<span class="doctag">@code</span> x&#125; and &#123;<span class="doctag">@code</span> y&#125;, &#123;<span class="doctag">@code</span> x.equals(y)&#125;</span></span><br><span class="line"><span class="comment">     *     should return &#123;<span class="doctag">@code</span> true&#125; if and only if</span></span><br><span class="line"><span class="comment">     *     &#123;<span class="doctag">@code</span> y.equals(x)&#125; returns &#123;<span class="doctag">@code</span> true&#125;.</span></span><br><span class="line"><span class="comment">     * &lt;li&gt;It is &lt;i&gt;transitive&lt;/i&gt;: for any non-null reference values</span></span><br><span class="line"><span class="comment">     *     &#123;<span class="doctag">@code</span> x&#125;, &#123;<span class="doctag">@code</span> y&#125;, and &#123;<span class="doctag">@code</span> z&#125;, if</span></span><br><span class="line"><span class="comment">     *     &#123;<span class="doctag">@code</span> x.equals(y)&#125; returns &#123;<span class="doctag">@code</span> true&#125; and</span></span><br><span class="line"><span class="comment">     *     &#123;<span class="doctag">@code</span> y.equals(z)&#125; returns &#123;<span class="doctag">@code</span> true&#125;, then</span></span><br><span class="line"><span class="comment">     *     &#123;<span class="doctag">@code</span> x.equals(z)&#125; should return &#123;<span class="doctag">@code</span> true&#125;.</span></span><br><span class="line"><span class="comment">     * &lt;li&gt;It is &lt;i&gt;consistent&lt;/i&gt;: for any non-null reference values</span></span><br><span class="line"><span class="comment">     *     &#123;<span class="doctag">@code</span> x&#125; and &#123;<span class="doctag">@code</span> y&#125;, multiple invocations of</span></span><br><span class="line"><span class="comment">     *     &#123;<span class="doctag">@code</span> x.equals(y)&#125; consistently return &#123;<span class="doctag">@code</span> true&#125;</span></span><br><span class="line"><span class="comment">     *     or consistently return &#123;<span class="doctag">@code</span> false&#125;, provided no</span></span><br><span class="line"><span class="comment">     *     information used in &#123;<span class="doctag">@code</span> equals&#125; comparisons on the</span></span><br><span class="line"><span class="comment">     *     objects is modified.</span></span><br><span class="line"><span class="comment">     * &lt;li&gt;For any non-null reference value &#123;<span class="doctag">@code</span> x&#125;,</span></span><br><span class="line"><span class="comment">     *     &#123;<span class="doctag">@code</span> x.equals(null)&#125; should return &#123;<span class="doctag">@code</span> false&#125;.</span></span><br><span class="line"><span class="comment">     * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * The &#123;<span class="doctag">@code</span> equals&#125; method for class &#123;<span class="doctag">@code</span> Object&#125; implements</span></span><br><span class="line"><span class="comment">     * the most discriminating possible equivalence relation on objects;</span></span><br><span class="line"><span class="comment">     * that is, for any non-null reference values &#123;<span class="doctag">@code</span> x&#125; and</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> y&#125;, this method returns &#123;<span class="doctag">@code</span> true&#125; if and only</span></span><br><span class="line"><span class="comment">     * if &#123;<span class="doctag">@code</span> x&#125; and &#123;<span class="doctag">@code</span> y&#125; refer to the same object</span></span><br><span class="line"><span class="comment">     * (&#123;<span class="doctag">@code</span> x == y&#125; has the value &#123;<span class="doctag">@code</span> true&#125;).</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * Note that it is generally necessary to override the &#123;<span class="doctag">@code</span> hashCode&#125;</span></span><br><span class="line"><span class="comment">     * method whenever this method is overridden, so as to maintain the</span></span><br><span class="line"><span class="comment">     * general contract for the &#123;<span class="doctag">@code</span> hashCode&#125; method, which states</span></span><br><span class="line"><span class="comment">     * that equal objects must have equal hash codes.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>   obj   the reference object with which to compare.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>  &#123;<span class="doctag">@code</span> true&#125; if this object is the same as the obj</span></span><br><span class="line"><span class="comment">     *          argument; &#123;<span class="doctag">@code</span> false&#125; otherwise.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span>     #hashCode()</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span>     java.util.HashMap</span></span><br><span class="line"><span class="comment">     */</span></span><br></pre></td></tr></table></figure><h4 id="汉语翻译-1"><a href="#汉语翻译-1" class="headerlink" title="汉语翻译"></a>汉语翻译</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指示某个其他对象是否“等于”此对象.</span></span><br><span class="line"><span class="comment">     * equals方法在非空对象引用上实现等价关系：</span></span><br><span class="line"><span class="comment">     * &lt;ul&gt;</span></span><br><span class="line"><span class="comment">     * 1、它是自反的：对于任何非空的引用值x，x.equals（x）应该返回true</span></span><br><span class="line"><span class="comment">     * 2、它是对称的：对于任何非空的引用值x和y，x.equals（y）应该返回true，当且仅当 y.equals（x）返回true</span></span><br><span class="line"><span class="comment">     * 3、它是可传递的：对于任何非空的引用值 x、 y和 z，如果 x.equals（y）返回 true和 y.equals（z）返回 true，那么            * x.equals（z）应该返回 true</span></span><br><span class="line"><span class="comment">     * 4、它是一致的：对于任何非空的引用值x和y，多次调用x.equals（y）一致返回true或一致返回false，前提是对象的equals比较中      * 没有使用被修改的信息</span></span><br><span class="line"><span class="comment">     * 5、对于任何非空的引用值x，x.equals(null) 应该返回null</span></span><br><span class="line"><span class="comment">     *      </span></span><br><span class="line"><span class="comment">     * 请注意，每当重写hashCode方法时，通常都需要重写hashCode方法，以便维护hashCode方法的一般约定，即相同的对象必须具有相同      * 的哈希代码。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>   obj   the reference object with which to compare.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>   true if this object is the same as the obj</span></span><br><span class="line"><span class="comment">     *          argument;  false otherwise.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span>     #hashCode()</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span>     java.util.HashMap</span></span><br><span class="line"><span class="comment">     */</span></span><br></pre></td></tr></table></figure><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>由上面hashcode与equal方法的说明可以知道：</p><p>1、equal判断相等时，hashcode返回的值不一定不相等。也就是所hashcode相等时，无法得知equal是否相等</p><p>2、equal判断相等时，hashcode返回值一定相等</p><p>由于当一个对象中有大量成员信息时，用equal比较效率会比较低。</p><p>故，在判断两对象是否相等时，可以先进行hashcode的判断，如果不相等，则一定不相等，若hashcode值相等，在通过equal方法判断。</p><h3 id="扩展：关于HashSet"><a href="#扩展：关于HashSet" class="headerlink" title="扩展：关于HashSet"></a>扩展：关于HashSet</h3><p>HashSet集合特点：无序，元素唯一。</p><p>在HashSet集合中，通过hashcode和equal方法，保证元素的唯一性。</p>]]></content>
      
      
      
        <tags>
            
            <tag> java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章-用于测试</title>
      <link href="2020/10/07/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0-%E7%94%A8%E4%BA%8E%E6%B5%8B%E8%AF%95/"/>
      <url>2020/10/07/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0-%E7%94%A8%E4%BA%8E%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库课堂作业</title>
      <link href="2020/10/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E5%A0%82%E4%BD%9C%E4%B8%9A/"/>
      <url>2020/10/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E5%A0%82%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<p>查询身高大于180厘米的男生的学号和姓名；</p><a id="more"></a><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Sno,Sname</span><br><span class="line"><span class="keyword">from</span> S</span><br><span class="line"><span class="keyword">where</span> Height&gt;<span class="number">180</span></span><br></pre></td></tr></table></figure><p>查询计算机系（CS）所开设课程的课程号及选该课程的学生学号；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> First.Cno,Second.Sno</span><br><span class="line"><span class="keyword">from</span> C <span class="keyword">First</span>,SC <span class="keyword">Second</span></span><br><span class="line"><span class="keyword">where</span> First.Cno = Second.Cno <span class="keyword">and</span> First.Sdept = <span class="string">&#x27;CS&#x27;</span></span><br></pre></td></tr></table></figure><p>查询至少选修了一门电机系(EM)课程的女生的姓名；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Sname</span><br><span class="line"><span class="keyword">from</span> S</span><br><span class="line"><span class="keyword">where</span> Sex=<span class="string">&#x27;女&#x27;</span> <span class="keyword">and</span> Sno <span class="keyword">in</span> (</span><br><span class="line">  <span class="keyword">select</span> Sno</span><br><span class="line">  <span class="keyword">from</span> SC</span><br><span class="line">  <span class="keyword">where</span> Cno=(</span><br><span class="line">      <span class="keyword">select</span> Cno</span><br><span class="line">      <span class="keyword">from</span> C</span><br><span class="line">      <span class="keyword">where</span> Sdept = <span class="string">&#x27;EM&#x27;</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>查询SC表中每位学生已选课程的门数及其学号；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Sno,<span class="keyword">COUNT</span>(Cno)</span><br><span class="line"><span class="keyword">from</span> SC</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Sno</span><br></pre></td></tr></table></figure><p>查询SC表中每位学生的平均成绩及其学号；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Sno,<span class="keyword">AVG</span>(G)</span><br><span class="line"><span class="keyword">from</span> SC</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Sno</span><br></pre></td></tr></table></figure><p>查询SC表中每门课程选课的学生人数、最高成绩、最低成绩、平均成绩和课程号；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">COUNT</span>(Sno),<span class="keyword">MAX</span>(G),<span class="keyword">MIN</span>(G),<span class="keyword">AVG</span>(G),Cno</span><br><span class="line"><span class="keyword">from</span> SC</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Cno</span><br></pre></td></tr></table></figure><p>查询所有课程的成绩都在80分以上的学生姓名、学号，并按学号升序排列；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> First.Sno,First.Sname</span><br><span class="line"><span class="keyword">from</span> S <span class="keyword">First</span>,SC <span class="keyword">Second</span></span><br><span class="line"><span class="keyword">where</span> First.Sno = Second.Sno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> First.Sno <span class="keyword">having</span> <span class="keyword">MIN</span>(Second.G)&gt;<span class="number">80</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> First.Sno <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure><p>查询缺成绩的学生的姓名及该门课程名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> S.Sname,C.Cno</span><br><span class="line"><span class="keyword">from</span> SC </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> C <span class="keyword">on</span> SC.Cno = C.Cno</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> S <span class="keyword">on</span> S.Sno = SC.Sno</span><br><span class="line"><span class="keyword">where</span> SC.G <span class="keyword">is</span> <span class="literal">null</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/05/hello-world/"/>
      <url>2020/10/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
